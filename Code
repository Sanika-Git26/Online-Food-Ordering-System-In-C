#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ITEMS 5

// Structure to hold menu item details
typedef struct {
    int id;
    char name[50];
    float price;
} MenuItem;

// Structure to hold order details
typedef struct {
    int itemId;
    int quantity;
} Order;

// Function to display menu
void displayMenu(MenuItem menu[]) {
    printf("\n----- Food Menu -----\n");
    for (int i = 0; i < MAX_ITEMS; i++) {
        printf("%d. %s - Rs%.2f\n", menu[i].id, menu[i].name, menu[i].price);
    }
}

// Function to take order
int takeOrder(Order orders[], MenuItem menu[]) {
    int itemId, quantity, count = 0;
    char choice;

    do {
        printf("\nEnter Item ID to order: ");
        scanf("%d", &itemId);
        if (itemId < 1 || itemId > MAX_ITEMS) {
            printf("Invalid Item ID! Try again.\n");
            continue;
        }
        printf("Enter Quantity: ");
        scanf("%d", &quantity);
        orders[count].itemId = itemId;
        orders[count].quantity = quantity;
        count++;

        printf("Do you want to add more items? (y/n): ");
        scanf(" %c", &choice);
    } while (choice == 'y' || choice == 'Y');

    return count;
}

// Function to generate bill
void generateBill(Order orders[], int orderCount, MenuItem menu[]) {
    float total = 0;
    printf("\n----- Order Summary -----\n");
    for (int i = 0; i < orderCount; i++) {
        int id = orders[i].itemId - 1;
        float cost = menu[id].price * orders[i].quantity;
        printf("%s x %d = Rs%.2f\n", menu[id].name, orders[i].quantity, cost);
        total += cost;
    }
    printf("-------------------------\nTotal Bill: Rs%.2f\n", total);
    printf("\nThank you for ordering!\n");
}

int main() {
    MenuItem menu[MAX_ITEMS] = {
        {1, "Burger", 50.00},
        {2, "Pizza", 80.00},
        {3, "Pasta", 60.00},
        {4, "Sandwich", 40.00},
        {5, "Fries", 20.00}
    };

    Order orders[10];
    int orderCount;

    printf("\n*** Welcome to Online Food Ordering System ***\n");
    displayMenu(menu);
    orderCount = takeOrder(orders, menu);
    generateBill(orders, orderCount, menu);
    
    return 0;
}
